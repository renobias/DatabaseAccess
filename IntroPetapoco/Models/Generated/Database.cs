




















// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `NORTHWIND`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Data Source=.;initial Catalog=NORTHWIND;User ID=sa;Password=P@ssw0rd`
//     Schema:                 ``
//     Include Views:          `False`



using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace IntroPetapoco.Entity
{

	public partial class NORTHWINDDB : Database
	{
		public NORTHWINDDB() 
			: base("NORTHWIND")
		{
			CommonConstruct();
		}

		public NORTHWINDDB(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			NORTHWINDDB GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static NORTHWINDDB GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new NORTHWINDDB();
        }

		[ThreadStatic] static NORTHWINDDB _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        

		public class Record<T> where T:new()
		{
			public static NORTHWINDDB repo { get { return NORTHWINDDB.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }

			public void Save() { repo.Save(this); }
			public int Update() { return repo.Update(this); }

			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static bool Exists(string sql, params object[] args) { return repo.Exists<T>(sql, args); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }

		}

	}
	



    

	[TableName("dbo.Categories")]



	[PrimaryKey("CategoryID")]




	[ExplicitColumns]

    public partial class Category : NORTHWINDDB.Record<Category>  
    {



		[Column] public int CategoryID { get; set; }





		[Column] public string CategoryName { get; set; }





		[Column] public string Description { get; set; }





		[Column] public byte[] Picture { get; set; }



	}

    

	[TableName("dbo.CustomerCustomerDemo")]



	[PrimaryKey("CustomerID", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class CustomerCustomerDemo : NORTHWINDDB.Record<CustomerCustomerDemo>  
    {



		[Column] public string CustomerID { get; set; }





		[Column] public string CustomerTypeID { get; set; }



	}

    

	[TableName("dbo.CustomerDemographics")]



	[PrimaryKey("CustomerTypeID", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class CustomerDemographic : NORTHWINDDB.Record<CustomerDemographic>  
    {



		[Column] public string CustomerTypeID { get; set; }





		[Column] public string CustomerDesc { get; set; }



	}

    

	[TableName("dbo.Customers")]



	[PrimaryKey("CustomerID", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class Customer : NORTHWINDDB.Record<Customer>  
    {



		[Column] public string CustomerID { get; set; }





		[Column] public string CompanyName { get; set; }





		[Column] public string ContactName { get; set; }





		[Column] public string ContactTitle { get; set; }





		[Column] public string Address { get; set; }





		[Column] public string City { get; set; }





		[Column] public string Region { get; set; }





		[Column] public string PostalCode { get; set; }





		[Column] public string Country { get; set; }





		[Column] public string Phone { get; set; }





		[Column] public string Fax { get; set; }



	}

    

	[TableName("dbo.Employees")]



	[PrimaryKey("EmployeeID")]




	[ExplicitColumns]

    public partial class Employee : NORTHWINDDB.Record<Employee>  
    {



		[Column] public int EmployeeID { get; set; }





		[Column] public string LastName { get; set; }





		[Column] public string FirstName { get; set; }





		[Column] public string Title { get; set; }





		[Column] public string TitleOfCourtesy { get; set; }





		[Column] public DateTime? BirthDate { get; set; }





		[Column] public DateTime? HireDate { get; set; }





		[Column] public string Address { get; set; }





		[Column] public string City { get; set; }





		[Column] public string Region { get; set; }





		[Column] public string PostalCode { get; set; }





		[Column] public string Country { get; set; }





		[Column] public string HomePhone { get; set; }





		[Column] public string Extension { get; set; }





		[Column] public byte[] Photo { get; set; }





		[Column] public string Notes { get; set; }





		[Column] public int? ReportsTo { get; set; }





		[Column] public string PhotoPath { get; set; }



	}

    

	[TableName("dbo.EmployeeTerritories")]



	[PrimaryKey("EmployeeID", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class EmployeeTerritory : NORTHWINDDB.Record<EmployeeTerritory>  
    {



		[Column] public int EmployeeID { get; set; }





		[Column] public string TerritoryID { get; set; }



	}

    

	[TableName("dbo.Order Details")]



	[PrimaryKey("OrderID", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class Order_Detail : NORTHWINDDB.Record<Order_Detail>  
    {



		[Column] public int OrderID { get; set; }





		[Column] public int ProductID { get; set; }





		[Column] public decimal UnitPrice { get; set; }





		[Column] public short Quantity { get; set; }





		[Column] public float Discount { get; set; }



	}

    

	[TableName("dbo.Orders")]



	[PrimaryKey("OrderID")]




	[ExplicitColumns]

    public partial class Order : NORTHWINDDB.Record<Order>  
    {



		[Column] public int OrderID { get; set; }





		[Column] public string CustomerID { get; set; }





		[Column] public int? EmployeeID { get; set; }





		[Column] public DateTime? OrderDate { get; set; }





		[Column] public DateTime? RequiredDate { get; set; }





		[Column] public DateTime? ShippedDate { get; set; }





		[Column] public int? ShipVia { get; set; }





		[Column] public decimal? Freight { get; set; }





		[Column] public string ShipName { get; set; }





		[Column] public string ShipAddress { get; set; }





		[Column] public string ShipCity { get; set; }





		[Column] public string ShipRegion { get; set; }





		[Column] public string ShipPostalCode { get; set; }





		[Column] public string ShipCountry { get; set; }



	}

    

	[TableName("dbo.Products")]



	[PrimaryKey("ProductID")]




	[ExplicitColumns]

    public partial class Product : NORTHWINDDB.Record<Product>  
    {



		[Column] public int ProductID { get; set; }





		[Column] public string ProductName { get; set; }





		[Column] public int? SupplierID { get; set; }





		[Column] public int? CategoryID { get; set; }





		[Column] public string QuantityPerUnit { get; set; }





		[Column] public decimal? UnitPrice { get; set; }





		[Column] public short? UnitsInStock { get; set; }





		[Column] public short? UnitsOnOrder { get; set; }





		[Column] public short? ReorderLevel { get; set; }





		[Column] public bool Discontinued { get; set; }



	}

    

	[TableName("dbo.Region")]



	[PrimaryKey("RegionID", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class Region : NORTHWINDDB.Record<Region>  
    {



		[Column] public int RegionID { get; set; }





		[Column] public string RegionDescription { get; set; }



	}

    

	[TableName("dbo.Shippers")]



	[PrimaryKey("ShipperID")]




	[ExplicitColumns]

    public partial class Shipper : NORTHWINDDB.Record<Shipper>  
    {



		[Column] public int ShipperID { get; set; }





		[Column] public string CompanyName { get; set; }





		[Column] public string Phone { get; set; }



	}

    

	[TableName("dbo.Suppliers")]



	[PrimaryKey("SupplierID")]




	[ExplicitColumns]

    public partial class Supplier : NORTHWINDDB.Record<Supplier>  
    {



		[Column] public int SupplierID { get; set; }





		[Column] public string CompanyName { get; set; }





		[Column] public string ContactName { get; set; }





		[Column] public string ContactTitle { get; set; }





		[Column] public string Address { get; set; }





		[Column] public string City { get; set; }





		[Column] public string Region { get; set; }





		[Column] public string PostalCode { get; set; }





		[Column] public string Country { get; set; }





		[Column] public string Phone { get; set; }





		[Column] public string Fax { get; set; }





		[Column] public string HomePage { get; set; }



	}

    

	[TableName("dbo.Territories")]



	[PrimaryKey("TerritoryID", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class Territory : NORTHWINDDB.Record<Territory>  
    {



		[Column] public string TerritoryID { get; set; }





		[Column] public string TerritoryDescription { get; set; }





		[Column] public int RegionID { get; set; }



	}


}
